//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
float center<float uimin = 0.0;> = .75;
float smooth<float uimin = 0.0;> = .2;
float intensity<float uimin = 0.0; float uimax = 1.0;> = .45;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 col = texture2d.Sample(linearSampler, input.uv);
	float2 uv = input.uv*2 - 1;
	float Sign = -sign(length(uv) - center);
	float c = (length(uv) - center) / (smooth*.5 + (smooth==0?.001:0));
	return col * saturate(smoothstep(0, 1, lerp(1, (1 - c), intensity)));
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



