//@author: vux
//@help: template for texture fx
//@tags: texture
//@credits: 

Texture2D texture2d : PREVIOUS;
Texture2D Grain;

float intensity<float uimin = 0.0; float uimax = 1.0;> = .25;

SamplerState linearSampler : IMMUTABLE
{
    Filter = MIN_MAG_MIP_LINEAR;
    AddressU = Clamp;
    AddressV = Clamp;
};

struct psInput
{
	float4 p : SV_Position;
	float2 uv : TEXCOORD0;
};


float4 PS(psInput input) : SV_Target
{
	float4 c = texture2d.Sample(linearSampler,input.uv);
	float grain = Grain.Sample(linearSampler, input.uv).r;
	float4 cc = c;
	if(grain > .5){
		cc = 2 * (1 - grain) * c + 2 * (grain - .5) * pow(c, .5);
	}else{
		cc = 2 * c * grain + 2 * (.5 - grain) * c * c;
	}
	
	return lerp(c, cc, intensity);
}

technique10 Process
{
	pass P0
	{
		SetPixelShader(CompileShader(ps_4_0,PS()));
	}
}



